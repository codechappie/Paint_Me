let html=document.getElementById("paintme__app");const paintMeHTML='\n<button id="paintme-button">\n<img src="https://codechappie.github.io/Paint_Me/icons/icons8_paint_palette.svg" alt="">\n</button>\n<div id="paintme">\n\x3c!-- Navigation bar --\x3e\n<nav id="main-nav" class="navbar-paintme">\n<div class="container-fluid">\n    \x3c!-- Shapes --\x3e\n    <ul id="shape-list" class="nav-paintme">\n        <li class="nav-item-paintme" data-shape="rectangle">\n            <a>\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_rectangle_stroked.svg" alt="" />\n            </a>\n        </li>\n        <li class="nav-item-paintme" data-shape="oval">\n            <a>\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_ellipse_stroked.svg" alt="" />\n            </a>\n        </li>\n        <li class="nav-item-paintme" data-shape="circle">\n            <a>\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_circled.svg" alt="" />\n            </a>\n        </li>\n        <li class="nav-item-paintme" data-shape="line">\n            <a>\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_line.svg" alt="" />\n            </a>\n        </li>\n        <li class="nav-item-paintme" class="active" data-shape="lineList">\n            <a>\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_pencil_tip.svg" alt="" />\n            </a>\n        </li>\n        <li class="nav-item-paintme eraser" class="active" data-shape="eraseList">\n            <a>\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8-erase.png" alt="" />\n            </a>\n        </li>\n        <li class="nav-item-paintme" class="texto" data-shape="text">\n            <a>\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_text.svg" alt="" />\n            </a>\n        </li>\n        \x3c!-- <li class="nav-item-paintme" data-shape="move">\n<a>\n<img src="https://codechappie.github.io/Paint_Me/icons/icons8_text.svg" alt="" />\n</a>\n</li> --\x3e\n    </ul>\n    \x3c!-- Settings --\x3e\n    <ul id="settings-list" class="nav-paintme">\n        <li class="nav-item-paintme">\n            <a>\n                <input id="color-selector" type="color" />\n            </a>\n        </li>\n        <li class="nav-item-paintme">\n            <a data-toggle="modal" id="btn-size" class="btn-si">\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_positive_dynamic.svg" alt="" />\n            </a>\n        </li>\n        <li class="nav-item-paintme">\n            <a id="btn-bg">\n                <img src="https://codechappie.github.io/Paint_Me/icons/btn-whiteboard.png" alt="" />\n            </a>\n        </li>\n        <li class="nav-item-paintme">\n            <a id="fill-toggle" data-filled="no">\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_bring_forward.svg" alt="" />\n            </a>\n        </li>\n    </ul>\n    \x3c!-- IO --\x3e\n    <ul id="io-list" class="nav-paintme">\n        <li class="nav-item-paintme">\n            <a id="img-save">\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_download_from_cloud.svg" alt="" />\n            </a>\n        </li>\n        <li class="nav-item-paintme">\n            <a id="img-load">\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_upload_to_cloud.svg" alt="" />\n            </a>\n        </li>\n    </ul>\n    \x3c!-- Undo + Redo --\x3e\n    <ul id="time-travel" class="nav-paintme">\n        <li class="nav-item-paintme">\n            <a id="img-clear">\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_file.svg" alt="" />\n            </a>\n        </li>\n        <li class="nav-item-paintme">\n            <a id="btn-undo">\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_undo.svg" alt="" />\n            </a>\n        </li>\n        <li class="nav-item-paintme">\n            <a id="btn-redo">\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_redo.svg" alt="" />\n            </a>\n        </li>\n    </ul>\n\n    <ul id="extra-tools" class="nav-paintme">\n        <li class="nav-item-paintme">\n            <a class="btn-close">\n                <img src="https://codechappie.github.io/Paint_Me/icons/closepaint.png" alt="" />\n            </a>\n        </li>\n    </ul>\n</div>\n</nav>\n\n\x3c!-- Canvas --\x3e\n<div class="container-fluid">\n<canvas id="canvas">\n    Tu navegador no soporta esta aplicaci칩n :(\n</canvas>\n</div>\n\n\x3c!-- Hidden modal for size adjustments --\x3e\n<div id="size-modal" class="modal">\n<div class="modal-dialog">\n    <div class="modal-content">\n        <div class="modal-header">\n            <h4 class="modal-title">Modificar tama침os</h4>\n            <button type="button" class="close btn-close-modal-size abort" data-dismiss="modal">\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_multiply.svg" alt="" />\n            </button>\n        </div>\n        <div class="modal-body">\n            <table class="table" id="size-table">\n                <tbody>\n                    <tr id="font-row" data-value="36pt">\n                        <td>Tama침o de fuente</td>\n                        <td>\n                            <a class="decrease"> - </a>\n                        </td>\n                        <td class="value-data center">36pt</td>\n                        <td class="center">\n                            <a class="increase"> + </a>\n                        </td>\n                    </tr>\n                    <tr id="width-row" data-value="1">\n                        <td>Ancho de linea</td>\n                        <td>\n                            <a class="decrease"> - </a>\n                        </td>\n                        <td class="value-data center">10</td>\n                        <td class="center">\n                            <a class="increase"> + </a>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class="modal-footer">\n            <button type="button" class="btn btn-close-modal-size abort">\n                Cancelar\n            </button>\n            <button type="button" class="btn btn-close-modal-size confirm">\n                Aplicar\n            </button>\n        </div>\n    </div>\n</div>\n</div>\n\n<div id="bg-modal" class="modal">\n<div class="modal-dialog">\n    <div class="modal-content">\n        <div class="modal-header">\n            <h4 class="modal-title">Modificar tama침os</h4>\n            <button type="button" class="close btn-close-modal-bg abort" data-dismiss="modal">\n                <img src="https://codechappie.github.io/Paint_Me/icons/icons8_multiply.svg" alt="" />\n            </button>\n        </div>\n        <div class="modal-body">\n            <div class="group-options">\n                <div id="opt1" class="button-card-option">\n                    <h3>Transparente</h3>\n                </div>\n                <div id="opt2" class="button-card-option">\n                </div>\n                <div id="opt3" class="button-card-option">\n                </div>\n                <div id="opt4" class="button-card-option">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n\n</div>';html.insertAdjacentHTML("afterend",paintMeHTML),html.remove(),console.log(html),window.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("paintme-button"),t=document.querySelector("#paintme"),n=document.querySelectorAll(".btn-close-modal-size"),s=document.getElementById("btn-size"),i=document.getElementById("size-modal"),a=document.querySelectorAll(".btn-close-modal-bg"),l=document.querySelector("#fill-toggle"),o=document.querySelector("#btn-bg"),c=document.querySelector("#bg-modal"),d=document.querySelector("#opt1"),r=document.querySelector("#opt2"),h=document.querySelector("#opt3"),p=document.querySelector("#opt4"),u=document.querySelector(".btn-close");n.forEach(e=>{e.addEventListener("click",()=>{i.classList.toggle("show")})}),e.addEventListener("click",()=>{t.classList.toggle("show")}),s.addEventListener("click",()=>{i.classList.toggle("show")}),n.forEach(e=>{e.addEventListener("click",()=>{i.classList.remove("show"),c.classList.remove("show")})}),a.forEach(e=>{e.addEventListener("click",()=>{c.classList.remove("show"),i.classList.remove("show")})}),o.addEventListener("click",()=>{c.classList.toggle("show"),i.classList.remove("show")}),l.addEventListener("click",()=>{l.classList.toggle("active")}),u.addEventListener("click",()=>{t.classList.toggle("show")}),s.addEventListener("click",()=>{i.classList.toggle("show"),c.classList.remove("show")}),d.addEventListener("click",()=>{canvas.style.background="transparent"}),r.addEventListener("click",()=>{canvas.style.background="white",canvas.style.backgroundImage="url('https://codechappie.github.io/Paint_Me/icons/icons8_paint_palette.svg/images/white.png')"}),h.addEventListener("click",()=>{canvas.style.background="white",canvas.style.backgroundSize="200px 200px",canvas.style.backgroundImage="url('https://codechappie.github.io/Paint_Me/icons/icons8_paint_palette.svg/images/grid-pattern.png')",canvas.style.transition="background .2s ease-in-out"}),p.addEventListener("click",()=>{canvas.style.background="white",canvas.style.backgroundSize="600px 600px",canvas.style.backgroundImage="url('https://codechappie.github.io/Paint_Me/icons/icons8_paint_palette.svg/images/lined.png')",canvas.style.transition="background .2s ease-in-out"}),l.addEventListener("click",()=>{l.classList.toggle("active")}),u.addEventListener("click",()=>{t.classList.remove("show")}),s.addEventListener("click",()=>{i.classList.toggle("show"),c.classList.remove("show")})}),window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimaitonFrame||function(e){window.setTimeout(e,1e3/60)};class Shape{constructor(e,t){this.position=e,this.settings=t}render(e){e.fillStyle=this.settings.color,e.strokeStyle=this.settings.color,e.lineWidth=this.settings.width,e.font=this.settings.font}move(e){this.position=e}resize(e,t){}}class Rectangle extends Shape{constructor(e,t,n,s){super(e,t),this.width=n,this.height=s}render(e){e.globalCompositeOperation="source-over",super.render(e),this.settings.filled?e.fillRect(this.position.x,this.position.y,this.width,this.height):e.strokeRect(this.position.x,this.position.y,this.width,this.height)}resize(e,t){this.width=e-this.position.x,this.height=t-this.position.y}}class Oval extends Shape{constructor(e,t,n,s){super(e,t),this.xRadius=n,this.yRadius=s,this.x=e.x,this.y=e.y}render(e){e.globalCompositeOperation="source-over",super.render(e),e.beginPath();let t=(this.position.x+this.x)/2,n=(this.position.y+this.y)/2;e.ellipse(t,n,this.xRadius,this.yRadius,0,0,2*Math.PI),this.settings.filled?e.fill():(e.stroke(),e.closePath())}resize(e,t){this.x=e,this.y=t,this.xRadius=Math.abs(e-this.position.x)/2,this.yRadius=Math.abs(t-this.position.y)/2}}class Circle extends Oval{constructor(e,t,n){super(e,t,n,n)}resize(e,t){this.x=e,this.y=t;let n=Math.max(Math.abs(e-this.position.x),Math.abs(t-this.position.y))/2;this.xRadius=n,this.yRadius=n}}class Line extends Shape{constructor(e,t,n){super(e,t),this.endPosition={x:n.x,y:n.y}}render(e){e.globalCompositeOperation="source-over",super.render(e),e.beginPath(),e.moveTo(this.position.x,this.position.y),e.lineTo(this.endPosition.x,this.endPosition.y),e.stroke(),e.closePath()}resize(e,t){this.endPosition.x=e,this.endPosition.y=t}}class LineList extends Shape{constructor(e,t){super(e,t),this.xList=[],this.yList=[]}render(e){e.globalCompositeOperation="source-over",super.render(e),e.beginPath(),e.moveTo(this.position.x,this.position.y);for(let t=0;;t++){if(t>this.xList.length-1){e.quadraticCurveTo(this.xList[t],this.yList[t],this.xList[t+1],this.yList[t+1]);break}let n={x:(this.xList[t]+this.xList[t+1])/2,y:(this.yList[t]+this.yList[t+1])/2};e.quadraticCurveTo(this.xList[t],this.yList[t],n.x,n.y)}e.stroke(),e.closePath()}resize(e,t){this.xList.push(e),this.yList.push(t)}}class EraseList extends Shape{constructor(e,t){super(e,t),this.xList=[],this.yList=[]}render(e){super.render(e),e.beginPath(),e.globalCompositeOperation="destination-out",e.moveTo(this.position.x,this.position.y);for(let t=0;;t++){if(t>this.xList.length-1){e.quadraticCurveTo(this.xList[t],this.yList[t],this.xList[t+1],this.yList[t+1]);break}let n={x:(this.xList[t]+this.xList[t+1])/2,y:(this.yList[t]+this.yList[t+1])/2};e.quadraticCurveTo(this.xList[t],this.yList[t],n.x,n.y)}e.stroke(),e.closePath()}resize(e,t){this.xList.push(e),this.yList.push(t)}}class DrawnText extends Shape{constructor(e,t){super(e,t),this.chars=[]}render(e){e.globalCompositeOperation="source-over",super.render(e),this.settings.filled,e.fillText(this.chars.join(""),this.position.x,this.position.y)}resize(e){"Backspace"!==e?1===e.length&&this.chars.push(e):this.chars.length>0&&this.chars.pop()}}!function(){let e,t={shapes:[],undoneShapes:[],selectedShape:"lineList",canvas:document.getElementById("canvas"),ctx:document.getElementById("canvas").getContext("2d"),selectedElement:null,availableShapes:{RECTANGLE:"rectangle",OVAL:"oval",CIRCLE:"circle",LINE:"line",LINE_LIST:"lineList",ERASE_LIST:"eraseList",DrawnText:"text",MOVE:"move"},settings:{color:"#000000",filled:!1,width:10,font:"36pt sans-serif"},currentSettings:function(){return{color:t.settings.color.slice(0,t.settings.color.length),filled:t.settings.filled,width:t.settings.width,font:t.settings.font.slice(0,t.settings.font.length)}},currentSettingsEraser:function(){return{color:t.settings.color.slice(0,t.settings.color.length),filled:t.settings.filled,width:t.settings.width+10,font:t.settings.font.slice(0,t.settings.font.length)}},drawAllStoredShapes:function(){for(let e=0;e<t.shapes.length;e++)t.shapes[e]&&t.shapes[e].render(t.ctx)},drawSelected:function(){t.selectedElement&&t.selectedElement.render(t.ctx)},redraw:function(){t.ctx.canvas.width=window.innerWidth,t.ctx.canvas.height=window.innerHeight,width=canvas.width,height=canvas.height,t.ctx.clearRect(0,0,t.ctx.canvas.width,t.ctx.canvas.height),t.drawAllStoredShapes(),t.drawSelected()},redo:function(){t.undoneShapes.length>0&&(t.shapes.push(t.undoneShapes.pop()),t.redraw())},undo:function(){t.shapes.length>0&&(t.undoneShapes.push(t.shapes.pop()),t.redraw())}};t.canvas.addEventListener("touchstart",function(e){var n,s,i;mousePos=(n=canvas,s=e,i=n.getBoundingClientRect(),{x:s.touches[0].clientX-i.left,y:s.touches[0].clientY-i.top});var a=e.touches[0],l=new MouseEvent("mousedown",{clientX:a.clientX,clientY:a.clientY});t.canvas.dispatchEvent(l)},!1),t.canvas.addEventListener("touchend",function(e){var n=new MouseEvent("mouseup",{});t.canvas.dispatchEvent(n)},!1),t.canvas.addEventListener("touchmove",function(e){var n=e.touches[0],s=new MouseEvent("mousemove",{clientX:n.clientX,clientY:n.clientY});t.canvas.dispatchEvent(s)},!1),t.canvas.addEventListener("mousedown",function(n){switch(e={x:n.offsetX,y:n.offsetY},t.selectedShape){case t.availableShapes.RECTANGLE:t.selectedElement=new Rectangle(e,t.currentSettings(),0,0);break;case t.availableShapes.OVAL:t.selectedElement=new Oval(e,t.currentSettings(),0,0);break;case t.availableShapes.CIRCLE:t.selectedElement=new Circle(e,t.currentSettings(),0);break;case t.availableShapes.LINE:t.selectedElement=new Line(e,t.currentSettings(),e);break;case t.availableShapes.LINE_LIST:t.selectedElement=new LineList(e,t.currentSettings());break;case t.availableShapes.ERASE_LIST:t.selectedElement=new EraseList(e,t.currentSettingsEraser());break;case t.availableShapes.DrawnText:t.selectedElement&&(t.shapes.push(t.selectedElement),t.undoneShapes.splice(0,t.undoneShapes.length)),t.selectedElement=new DrawnText(e,t.currentSettings());break;case t.availableShapes.MOVE:}}),t.canvas.addEventListener("mousemove",function(e){t.selectedElement&&t.selectedShape!==t.availableShapes.DrawnText&&(t.selectedElement.resize(e.offsetX,e.offsetY),t.redraw())}),document.addEventListener("mouseup",function(e){t.selectedElement&&t.selectedShape!==t.availableShapes.DrawnText&&(t.shapes.push(t.selectedElement),t.selectedElement=null,t.undoneShapes.splice(0,t.undoneShapes.length))}),document.addEventListener("keypress",function(e){var n;t.selectedShape===t.availableShapes.DrawnText&&t.selectedElement?"Enter"===(n=e.key)?(t.shapes.push(t.selectedElement),t.selectedElement=null,t.undoneShapes.splice(0,t.undoneShapes.length)):(t.selectedElement.resize(n),t.redraw()):"Z"===e.key.toUpperCase()&&e.ctrlKey&&(e.shiftKey?t.redo():t.undo())}),document.addEventListener("keydown",function(e){if(t.selectedShape===t.availableShapes.DrawnText&&t.selectedElement){let n=e.key;"Backspace"===n&&(t.selectedElement.resize(n),t.redraw())}}),document.getElementById("btn-undo").addEventListener("click",t.undo),document.getElementById("btn-redo").addEventListener("click",t.redo),document.querySelectorAll("#shape-list li").forEach(function(e){e.addEventListener("click",function(s){"no"===n.dataset.filled&&(t.settings.filled=!1);let i=e.dataset.shape;i===t.availableShapes.DrawnText&&(t.settings.filled=!0,t.shapes.push(t.selectedElement),t.undoneShapes.splice(0,t.undoneShapes.length)),i!==t.selectedShape&&(t.selectedElement=null,t.selectedShape=i,document.querySelectorAll("#shape-list li.active")[0].classList.toggle("active"),e.classList.toggle("active"))})});let n=document.getElementById("fill-toggle");n.addEventListener("click",function(e){n.firstElementChild.classList.toggle("far"),n.firstElementChild.classList.toggle("fas"),"no"===n.dataset.filled?(n.dataset.filled="yes",t.settings.filled=!0):(n.dataset.filled="no",t.settings.filled=!1)});let s=document.getElementById("color-selector");s.value="#000000",s.addEventListener("change",function(e){t.settings.color=s.value});let i=document.getElementById("width-row"),a=i.querySelectorAll("td > a.decrease")[0],l=i.querySelectorAll("td > a.increase")[0],o=i.querySelectorAll("td.value-data")[0];a.addEventListener("click",function(e){o.innerHTML=Math.max(1,parseInt(o.innerHTML)-4)}),l.addEventListener("click",function(e){o.innerHTML=Math.min(70,parseInt(o.innerHTML)+4)});let c=document.getElementById("font-row"),d=c.querySelectorAll("td > a.decrease")[0],r=c.querySelectorAll("td > a.increase")[0],h=c.querySelectorAll("td.value-data")[0];d.addEventListener("click",function(e){h.innerHTML=(e=>Math.max(6,parseInt(e.slice(0,e.length-2))-4)+"pt")(h.innerHTML)}),r.addEventListener("click",function(e){h.innerHTML=(e=>Math.min(70,parseInt(e.slice(0,e.length-2))+4)+"pt")(h.innerHTML)});let p=document.getElementById("size-modal"),u=p.querySelectorAll("button.abort");for(let e=0;e<u.length;e++)u[e].addEventListener("click",function(e){o.innerHTML=i.dataset.value,h.innerHTML=c.dataset.value});function g(e){switch(e.type){case"Rectangle":t.shapes.push(new Rectangle(e.position,e.settings,e.width,e.height));break;case"Oval":t.shapes.push(new Oval(e.position,e.settings,e.xRadius,e.yRadius));break;case"Circle":t.shapes.push(new Circle(e.position,e.settings,e.xRadius));break;case"Line":t.shapes.push(new Line(e.position,e.settings,e.endPosition));break;case"LineList":let n=new LineList(e.position,e.settings);for(let t=0;t<e.xList.length;t++)n.resize(e.xList[t],e.yList[t]);t.shapes.push(n);break;case"EraseList":let s=new EraseList(e.position,e.settings);for(let t=0;t<e.xList.length;t++)s.resize(e.xList[t],e.yList[t]);t.shapes.push(s);break;case"DrawnText":let i=new DrawnText(e.position,e.settings);for(let t=0;t<e.chars.length;t++)i.resize(e.chars[t]);t.shapes.push(i)}}function m(e){let n=e.target.result,s=JSON.parse(n);t.selectedElement=null,t.shapes.splice(0,t.shapes.length),t.undoneShapes.splice(0,t.undoneShapes.length);for(let e=0;e<s.length;e++)g(s[e]);t.redraw()}function v(e){let t=e.target.files[0];if(!t)return;let n=new FileReader;n.addEventListener("load",m),n.readAsText(t)}p.querySelectorAll("button.confirm")[0].addEventListener("click",function(e){i.dataset.value=o.innerHTML,t.settings.width=parseInt(o.innerHTML),c.dataset.value=h.innerHTML,t.settings.font=h.innerHTML+" "+t.settings.font.split(" ")[1]}),document.getElementById("img-save").addEventListener("click",function(){let e=window.document.createElement("a");e.href=window.URL.createObjectURL(function(){let e=[];for(let n=0;n<t.shapes.length;n++){let s=JSON.parse(JSON.stringify(t.shapes[n]));s.type=t.shapes[n].__proto__.constructor.name,e.push(s)}return new Blob([JSON.stringify(e)],{type:"application/json"})}()),e.download="image.json",document.body.appendChild(e),e.click(),document.body.removeChild(e)}),document.getElementById("img-load").addEventListener("click",function(){let e=window.document.createElement("input");e.type="file",document.body.appendChild(e),e.style.visibility="hidden",e.addEventListener("change",v,!1),e.click(),document.body.removeChild(e)}),document.getElementById("img-clear").addEventListener("click",function(e){t.selectedElement=null,t.shapes.splice(0,t.shapes.length),t.undoneShapes.splice(0,t.undoneShapes.length),t.redraw()})}();
